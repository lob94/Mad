//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Es.Udc.DotNet.MiniPortal.Model
{
    using System;
    using System.Text;
    using System.Collections.Generic;
    
    public partial class UserGroup
    {
        public UserGroup()
        {
            this.Recommendations = new HashSet<Recommendation>();
            this.UserProfiles = new HashSet<UserProfile>();
        }
    
        public long groupId { get; set; }
        public string name { get; set; }
        public string description { get; set; }
    
        public virtual ICollection<Recommendation> Recommendations { get; set; }
        public virtual ICollection<UserProfile> UserProfiles { get; set; }
    
    	/// <summary>
    	/// A hash code for this instance, suitable for use in hashing algorithms and data structures 
    	//  like a hash table. It uses the Josh Bloch implementation from "Effective Java"
    	/// </summary>
    	/// <returns>
    	/// Returns a hash code for this instance.
    	/// </returns>
    	public override int GetHashCode()
    	{
    	    unchecked
    	    {
    			int multiplier = 31;
    			int hash = GetType().GetHashCode();
    
    			hash = hash * multiplier + groupId.GetHashCode();
    			hash = hash * multiplier + (name == null ? 0 : name.GetHashCode());
    			hash = hash * multiplier + (description == null ? 0 : description.GetHashCode());
    
    			return hash;
    	    }
    
    	}
        /// <summary>
        /// Compare this object against another instance using a value approach (field-by-field) 
        /// </summary>
    	public override bool Equals(object obj)
    	{
    	    UserGroup target = (UserGroup)obj;
    
    		return true
               &&  (this.groupId == target.groupId )       
               &&  (this.name == target.name )       
               &&  (this.description == target.description )       
               ;
    
        }
    
        /// <summary>
        /// Returns a <see cref="T:System.String"></see> that represents the 
        /// current <see cref="T:System.Object"></see>.
        /// </summary>
        /// <returns>
        /// A <see cref="T:System.String"></see> that represents the current 
        /// <see cref="T:System.Object"></see>.
        /// </returns>
    	public override String ToString()
    	{
    	    StringBuilder strUserGroup = new StringBuilder();
    
    		strUserGroup.Append("[ ");
           strUserGroup.Append(" groupId = " + groupId + " | " );       
           strUserGroup.Append(" name = " + name + " | " );       
           strUserGroup.Append(" description = " + description + " | " );       
            strUserGroup.Append("] ");    
    
    		return strUserGroup.ToString();
        }
    
    
    }
}
